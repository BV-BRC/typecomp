package [% client_package_name %];

use JSON::RPC::Client;
use strict;
use Data::Dumper;
use URI;

=head1 NAME

[% client_package_name %]

=head1 DESCRIPTION

[% module_doc %]

=cut

sub new
{
    my($class, $url) = @_;

    my $self = {
	client => JSON::RPC::Client->new,
	url => $url,
    };
    return bless $self, $class;
}

[% FOREACH method IN methods %]

=head2 $result = [% method.name %]([% method.args %])

[% method.doc %]

=cut

sub [% method.name %]
{
    my($self, @args) = @_;

    @args == [% method.arg_count %] or die "Invalid argument count (expecting [% method.arg_count %])";
    my $result = $self->{client}->call($self->{url}, {
	method => "[% module.module_name %].[% method.name %]",
	params => \@args,
    });
    if ($result) {
	if ($result->is_error) {
	    die "Error invoking [% method.name %]: " . $result->error_message;
	} else {
	    return $result->result;
	}
    } else {
	die "Error invoking [% method.name %]: " . $self->{client}->status_line;
    }
}


[% END %]

1;
