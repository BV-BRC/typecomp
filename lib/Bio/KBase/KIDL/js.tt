[% FOREACH module IN modules %]

function [% module.module_name %](url) {

    var _url = url;

[% FOREACH method IN module.methods %]
[% IF method.arg_count == 0 -%]
    this.[% method.name %] = function(_callback, _error_callback) {
[% ELSE -%]
    this.[% method.name %] = function([% method.args %], _callback, _error_callback) {
[% END -%]
        return json_call_ajax("[% module.module_name %].[% method.name %]", [[% method.args %]], [% method.ret_count %], _callback, _error_callback);
    };
[% END -%]

    function json_call_ajax(method, params, num_rets, callback, error_callback) {
        var deferred = $.Deferred();

        if (typeof callback === 'function') {
           deferred.done(callback);
        }

        if (typeof error_callback === 'function') {
           deferred.fail(error_callback);
        }

        var rpc = {
            params:  params,
            method:  method,
            version: "1.1"
        };
        
        var body = JSON.stringify(rpc);
        jQuery.ajax({
            dataType:    "text",
            url:         _url,
            data:        body,
            processData: false,
            type:        "POST",
            success: function (data, status, xhr) {
                try {
                    var resp = JSON.parse(data);
                    var result = resp.result;
                    if (num_rets === 1) {
                        deferred.resolve(result[0]);
                    } else {
                        deferred.resolve(result);
                    }
                } catch (err) {
                    deferred.reject({
                        status: 503,
                        error: err,
                        url: _url,
                        body: body
                    });
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                if (xhr.responseText) {
                    try {
                        var resp = JSON.parse(xhr.responseText);
                        deferred.reject(resp.error);
                    } catch (err) { // Not JSON
                        deferred.reject({ error: xhr.responseText });
                    }
                } else {
                    deferred.reject({
                        message: "Unknown Error"
                    });
                }
            }
        });

        return deferred.promise();
    }
}

[% END %]